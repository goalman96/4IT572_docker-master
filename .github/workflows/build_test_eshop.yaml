name: Build and tests our Eshop

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Install all dependencies
  Install:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Setup node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Run Unit tests
        run: npm run test -- --colors

  Deploy:
    needs: [Build, Test]
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged  }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2.4.0
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Install ansible and boto
        run: |
          pip install ansible==4 boto boto3
      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          # Required, playbook filepath
          playbook: ec2_deploy.yml
          # Optional, directory where playbooks live
          directory: ./.github/workflows/ansible
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: |
            [all]
            localhost
          # Optional, encrypted vault password
          vault_password: ${{secrets.VAULT_PASSWORD}}
          # Optional, additional flags to pass to ansible-playbook
          options: |
            --user ec2-user

