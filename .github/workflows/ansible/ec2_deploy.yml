- name: Tag old EC2 instances
  hosts: localhost
  connection: local

  tasks:
    - name: Get old EC2 instances
      ec2_instance_facts:
        region: us-east-1
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
        filters:
          instance:
            - group-name: eshop
      register: oldEc2

- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Launch EC2 instance
      amazon.aws.ec2:
        instance_type: t2.small
        image: ami-04902260ca3d33422
        region: us-east-1
        key_name: devops
        vpc_subnet_id: subnet-0c986cd89c9977717
        assign_public_ip: yes
        count: 1
        group: eshop
        wait: true
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
      register: ec2

    - name: Add instance host to group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH connection
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 30
        timeout: 300
      loop: "{{ ec2.instances }}"

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Add extras
      shell: yum-config-manager --enable extras
      become: yes
    - name: Enable docker package
      shell: amazon-linux-extras enable docker
      become: yes
    - name: Install Docker
      yum:
        name:
          - docker
          - git
        state: latest
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Set rights to docker
      shell: usermod -a -G docker ec2-user
      become: yes
    - name: Get project files from git
      git:
        repo: 'https://github.com/goalman96/4IT572_docker-master.git'
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port:
          80

- name: Terminate old EC2 instances
  hosts: localhost
  connection: local

  tasks:
    - name: Terminate old EC2 instances
      amazon.aws.ec2:
        region: us-east-1
        instance_ids: "{{item.instance_id}}"
        state: absent
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
      with_items: "{{oldEc2.instances}}"
